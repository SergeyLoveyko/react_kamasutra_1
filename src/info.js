//  Компонента 

//  Это "функция", возвращающая разметку (JSX)

//  По сути 
//  Компонента - это какой то  "ТЕГ"





//  Коментарий  "JSX"  -  Ctrl + K + C




//                          ---  WebStorm  ---


//  Переход в нужную компоненту  -                        Ctrl + Shift + N

//  Возвращает нас к предыдушей открытости  -             Ctrl + Alt + стрелочка назад

//  Меню выбора файла   -                                 Ctrl + Shift + Tab

//  Переход в компоненту (на которой курсор)    -         Ctrl + B или Click

//  Открыть текущий файл (в окне Project, в дереве)   -   Alt + F1 + Enter

//  Изменить Имя    -                                     Shift + F6

//  Импортирвать компоненту (в текущую компоненту)   -    Alt + Enter

//  Преименовать все вхождения   -                        Shift + F6

//  Поиск нужного файла (компоненты)    -                 Ctrl + Shift + N




//  caret blink  ввести в поиске
//  выбрать




//  -------------------------------------------------------------


//                       --- Git ---


//  lesson 13, time: 10:00


//  В папке с проэктом
//  Выбираем в меню
//  И запускаем  "Git Bash Here"

//  Запускается  "консолька"

//  Прописываем команду
//  "gitk --all&"

//  Запускаем её
//  И у нас должен открыться
//  Некоторый графический интерфейс


//  Ctrl + insert       копировать строку адресса

//  И чтобы перейти на эту версию

//  Переходим обратно в  "консоль"
//  Где пишем  "git checkout"

//  И с помощью клавиш  "Shift + Insert"
//  Вставляем скопированую строку  "адресса коммита"


//  Если будет ругаться на файл  "packege-lock.json"
//  То мы его просто удалим



//  -------


//  Если вдруг мы что то изминили в каком то  "коммите"
//  И захотим перейти на другой  "коммит"

//  То нам это скажет в программе
//  Что мы изменили структуру
//  И есть не  "закомиченые изменения"


//  И нам нужно будет  "отменить изменения"

//  Пишем  "git status"
//  И видим что у нам  "модифицирован"  один файл


//  И тут мы также можем воспользоваться командой
//  "git checkout"

//  Она может  "уничтожать изменения"

//  Прописываем  
//  "git checkout"

//  А после путть к файлу который нужно  "откатить назад"
//  Т.е. убрать все изменения которые мы сотворили вдруг случайно

//  И выглидеть это будет так

//  "git checkout src/App.js"
//  Запускаем

//  Проверяем командой 
//  "git status"

//  Что у нас всё в порядке
//  И нет  "изменнёных файлов"




//  --------------------------------------------------------


//                  --- БЭМ  методология ---

//  https://ru.bem.info/methodology/



//                  --- themeforest social network ---

//  Макетики для примера




//                  --- К прочтению ---

//  history API html5

//  preventDefault

//  map (метод)

//  HashRouter          BrowserRouter

//  SOLID  принцыпы











//  -------------------------
//  -------------------------


//  MAP - принимает в себя (стрелочную функцию)





//  -------------------------
//  -------------------------











//  -------------------------------------------------------------------------






//  ------
//  ------




//  Lesson 13              git-репозиторий
//                     Как передвигаться по "коммитам




//  ------
//  ------




//  Lesson 15       Структура папок, новые компоненты, улучшение css
//
//                  Компонента "Profiles"
//                  Работа с "MyPosts" начинаем заполнять
//                  Создаём несколько "Постов" "Post"

//                  Дополнение в "VSC" расширения "Move imports"




//  ------
//  ------

//  Lesson 16                   Props

//  ------
//  ------

//  Lesson 17           Повторяем что порходили

//  ------
//  ------

//  Lesson 18               правка Content

//  ------
//  ------



//  Lesson 19           rout, browser-router, маршрутизация
//                           Система маршрута
//                          Смена страничек "Контента"

//                      у нас нет того пакета, чтобы настроить "роутинг"
//                      Для этого нам нужно его установить

//                      Открываем "терминал"
//                      Прописываем
//                      "npm instal"  или  "npm i"
//                      И после идёт название пакета  "react-router-dom"

//                      Все пакеты которые мы устанавливаем
//                      После ещё должны вписать  "-save"

//                      И выйдет в целом вот так
//                      "npm instal react-router-dom -save"

//                      Это значит, что не только установи
//                      А ещё и внеси в запись  "package.json"

//                      Какой пакет мы установили дополнительно





//  Lesson 20               Вместо  "а"  заменяем  на  "NavLink"



//      Если подчёркнуто
//      Значит не знает что это такое

//      Снова нажимаем   "Alt + Enter"
//      И снова импортируем с ближайшего адрессата

//      И вместо  "href"  будем использовать  "to"




//                          Тут же давайте сдаелам  "activ"  для странички


//      Это будет через  "фтрибут"  "activeClassName"




//  -----------
//  -----------




//  Lesson 21               Верстаем страничку Диалогов



//  -----------
//  -----------



//  Lesson 22                       Route, exact
//                                  А поговорить



//  -----------
//  -----------



//  Lesson 23               props для Диалогов (Messanges)
//                          И небольшая стилизация Profile




//  -----------
//  -----------




//  Lesson 24                 UI - BLL, выносим данные в сторону
//                            Рефакторинг "MyPosts" and "DialogItem"




//  -----------
//  -----------



//  Lesson 25                 метод массива - map
//




//  -----------
//  -----------



//  Lesson 26                 структура проекта, ещё раз про ui - bll
//
//                                          ДЗ




//  -----------
//  -----------





//  Lesson 27                 component vs render, прокидываем props через Route
//
//



//  -----------
//  -----------




//  Lesson 28                 выносим данные в index.js
//
//



//  -----------
//  -----------




//  Lesson 29                 упаковываем данные в state
//
//
//                       Мы вынесли с "index.js" создание данных
//                                      ДЗ





//  -----------
//  -----------





//  Lesson 30              остановочка "react за час, часть 2"
//
//
//                          Вспоминаем всё что проходили
//
//
//                          SPA (Single Page Aplication)
//
//
//                          Компонента
//                              Принимает в себя ROPS
//                              И возвращает JSX разметку
//
//
//                          Props
//
//
//                          map - это МЕТОД МАССИВА
//
//                              Единственый параметр который принимает
//                              MAP
//                                  Это "кулбэк функция"
//
//
//                          Route
//
//
//                          UI - BLL (User Interface - Businese Logic Layer)





//  -----------
//  -----------




//  Lesson 31                 onClick, ref, VirtualDOM
//
//                                      ДЗ
//
//


















//  Lesson 31, time: 00:00